# Generated by Django 5.1.1 on 2024-12-02 13:47

from typing import Sequence

import django.db.models.deletion
import django.db.models.expressions
import django.db.models.functions.comparison
import django.db.models.functions.text
import modelcluster.fields
from django.conf import settings
from django.db import migrations, models
from django.db.models import (
    PROTECT,
    CharField,
    CheckConstraint,
    DateTimeField,
    F,
    ForeignKey,
    Manager,
    ManyToManyField,
    Model,
    PositiveIntegerField,
    PositiveSmallIntegerField,
    Q,
    QuerySet,
    TextField,
    UniqueConstraint,
)
from django.db.models.functions import Cast, Length
from django.db.models.lookups import LessThanOrEqual
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.migrations.operations.base import Operation


def constrain_format() -> list[migrations.AddConstraint]:
    constraints = []
    for name, condition in {
        'minimum-bottom-row-A': Q(bottom_row__gte='A'),
        'maximum-bottom-row-P': Q(bottom_row__lte='P'),
        'minimum-right-column-1': Q(right_column__gte=1),
        'maximum-right-column-24': Q(right_column__lte=24),
        'dot-free-prefix': ~Q(prefix__contains='.'),
        'twelve-or-fewer-character-code': LessThanOrEqual(Length('prefix') + Length(Cast('max_number', CharField())), 12),
    }.items():
        constraints.append(
            migrations.AddConstraint(
                model_name='format',
                constraint=CheckConstraint(condition=condition, name=name),
            )
        )
    return constraints


def create_untracked(apps: migrations.state.StateApps, _schema_editor: BaseDatabaseSchemaEditor) -> None:
    for purpose in ('start', 'end'):
        container = apps.get_model('wellplated', 'Container').objects.create(
            code=purpose,
            format=apps.get_model('wellplated', 'Format').objects.create(
                bottom_row='A', right_column=1, max_number=0, prefix=purpose, purpose=purpose,
            ),
        )
        container.wells.add(apps.get_model('wellplated', 'Well')(label='A1'))
        container.wells.commit()


class Migration(migrations.Migration):
    initial = True

    dependencies = [migrations.swappable_dependency(settings.AUTH_USER_MODEL)]

    operations = [
        migrations.CreateModel(
            name='Format',
            fields=[
                ('bottom_row', models.CharField(default='H', editable=False, max_length=1)),
                ('right_column', models.PositiveSmallIntegerField(default=12, editable=False)),
                ('prefix', models.CharField(editable=False, max_length=128, primary_key=True, serialize=False)),
                ('current_number', models.PositiveIntegerField(default=0)),
                ('max_number', models.PositiveIntegerField(default=99999999, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, editable=False)),
                ('purpose', models.TextField(unique=True)),
            ],
        ),
        *constrain_format(),
        migrations.CreateModel(
            name='Container',
            fields=[
                (
                    'code',
                    models.CharField(
                        editable=False, max_length=128, primary_key=True, serialize=False
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True, editable=False)),
                (
                    'format',
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='containers',
                        to='wellplated.format',
                    ),
                ),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='Well',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'container',
                    modelcluster.fields.ParentalKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='wells',
                        to='wellplated.container',
                    ),
                ),
                ('label', models.CharField(editable=False, max_length=4)),
            ],
        ),
        migrations.AddConstraint(
            model_name='well',
            constraint=models.UniqueConstraint(
                fields=('container', 'label'), name='unique_container_well_label'
            ),
        ),
        migrations.RunPython(create_untracked, migrations.RunPython.noop),
        migrations.CreateModel(
            name='Plan',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                (
                    'created_by',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='plans_created',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'plan',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='transfers',
                        to='wellplated.plan',
                    ),
                ),
                (
                    'source',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='+',
                        to='wellplated.well',
                    ),
                ),
                (
                    'sink',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='+',
                        to='wellplated.well',
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name='well',
            name='sources',
            field=models.ManyToManyField(
                related_name='sinks', through='wellplated.Transfer', to='wellplated.well'
            ),
        ),
    ]
