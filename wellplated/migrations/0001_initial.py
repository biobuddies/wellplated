# Generated by Django 5.1.1 on 2024-12-02 13:47


from django.conf import settings
from django.db import migrations
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.migrations import state
from django.db.models import (
    BigAutoField,
    CharField,
    CheckConstraint,
    DateTimeField,
    ForeignKey,
    GeneratedField,
    ManyToManyField,
    PositiveSmallIntegerField,
    Q,
    TextField,
    Value,
)
from django.db.models.deletion import PROTECT
from django.db.models.functions import (
    Cast,
    Coalesce,
    Concat,
    Left,
    Length,
    LPad,
    Replace,
    Right,
    Substr,
)
from django.db.models.lookups import GreaterThanOrEqual, LessThanOrEqual
from modelcluster.fields import ParentalKey

from wellplated.models import CheckedCharField, CheckedPositiveSmallIntegerField

PREFIX_ID_LENGTH = 12
CONTAINER_CODE_LENGTH = 1 + 2 + PREFIX_ID_LENGTH  # bottom row, right column

# Tried using '%(app_label)s_%(class)s' as mentioned in
# https://docs.djangoproject.com/en/5.1/ref/models/constraints/
# but that resulted in wellplated_format as expected but also
# wellplated_newformat, presumably due to some migration renaming.
table = 'wellplated_format'
format_checks = {
    f'len({table}.bottom_row) == 1': Q(bottom_row__length=1),
    f"{table}.bottom_row <= 'P'": Q(bottom_row__lte='P'),
    f"{table}.bottom_row >= 'A'": Q(bottom_row__gte='A'),
    f'{table}.right_column >= 1': Q(right_column__gte=1),
    f'{table}.right_column <= 24': Q(right_column__lte=24),
    f'len({table}.prefix) <= {PREFIX_ID_LENGTH - 1}': Q(prefix__length__lte=PREFIX_ID_LENGTH - 1),
    f"'.' not in {table}.prefix": ~Q(prefix__contains='.'),
}

well_checks = {
    'well-bottom-row-gte-A': GreaterThanOrEqual(Left('label', 1), 'A'),
    'well-bottom-row-lte-format-max': LessThanOrEqual(Left('label', 1), Left('container', 1)),
    'well-right-column-gte-1': GreaterThanOrEqual(
        Cast(Right('label', 2), PositiveSmallIntegerField()), 1
    ),
    'well-right-column-lte-format-max': LessThanOrEqual(
        Right('label', 2), Cast(Substr('container', 2, 4), PositiveSmallIntegerField())
    ),
    'well-container-code-label-length-19': Q(
        # container code, dot, label row, label column
        container_code_label__length=CONTAINER_CODE_LENGTH + 1 + 1 + 2
    ),
    'well-container-code-label-has-1-dot': Q(
        container_code_label__length=(
            Length(Replace('container_code_label', Value('.'), Value(''))) + 1
        )
    ),
}


def constrain_models() -> list[migrations.AddConstraint]:
    """Forbid out-of-bounds at the database level"""
    return [
        migrations.AddConstraint(
            constraint=CheckConstraint(condition=condition, name=name), model_name='format'
        )
        for name, condition in format_checks.items()
    ] + [
        migrations.AddConstraint(
            constraint=CheckConstraint(condition=condition, name=name), model_name='well'
        )
        for name, condition in well_checks.items()
    ]


def create_untracked(apps: state.StateApps, _schema_editor: BaseDatabaseSchemaEditor) -> None:
    """
    Infinite source and sink

    Leave unused low numbers between start and end for future special purpose use.
    """
    for pk, purpose in {0: 'start', 999: 'end'}.items():
        container = apps.get_model('wellplated', 'Container').objects.create(
            id=pk,
            code=purpose,
            format=apps.get_model('wellplated', 'Format').objects.create(
                bottom_row='A', right_column=1, prefix=purpose, purpose=purpose
            ),
        )
        container.wells.add(apps.get_model('wellplated', 'Well')(label='A01'))
        container.wells.commit()


class Migration(migrations.Migration):
    initial = True

    dependencies = (migrations.swappable_dependency(settings.AUTH_USER_MODEL),)

    operations = (
        migrations.CreateModel(
            name='Format',
            fields=[
                (
                    'id',
                    BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('bottom_row', CheckedCharField(default='H', max_length=1)),
                (
                    'right_column',
                    CheckedPositiveSmallIntegerField(default=12, max_value=24, min_value=1),
                ),
                ('prefix', CheckedCharField(max_length=PREFIX_ID_LENGTH - 1, unique=True)),
                (
                    'bottom_right_prefix',
                    GeneratedField(
                        db_persist=True,
                        expression=Concat(
                            'bottom_row',
                            LPad(Cast('right_column', CharField()), 2, Value('0')),
                            'prefix',
                        ),
                        # bottom row, right column
                        output_field=CharField(max_length=1 + 2 + PREFIX_ID_LENGTH - 1),
                        unique=True,
                    ),
                ),
                ('created_at', DateTimeField(auto_now_add=True, editable=False)),
                ('purpose', TextField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Container',
            fields=[
                (
                    'id',
                    BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('external_id', PositiveSmallIntegerField(blank=True, default=None, null=True)),
                (
                    'code',
                    GeneratedField(
                        db_persist=True,
                        expression=Concat(
                            'format',
                            LPad(
                                Cast(Coalesce('external_id', 'id'), CharField()),
                                Value(CONTAINER_CODE_LENGTH) - Length('format'),
                                Value('0'),
                            ),
                        ),
                        editable=False,
                        output_field=CharField(max_length=CONTAINER_CODE_LENGTH),
                        unique=True,
                    ),
                ),
                ('created_at', DateTimeField(auto_now_add=True, editable=False)),
                (
                    'format',
                    ForeignKey(
                        editable=False,
                        on_delete=PROTECT,
                        related_name='containers',
                        to='wellplated.format',
                        to_field='bottom_right_prefix',
                    ),
                ),
            ],
            options={'abstract': False},
        ),
        migrations.CreateModel(
            name='Well',
            fields=[
                (
                    'id',
                    BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'container',
                    ParentalKey(
                        db_column='container_code',
                        editable=False,
                        on_delete=PROTECT,
                        related_name='wells',
                        to='wellplated.container',
                        to_field='code',
                    ),
                ),
                ('label', CharField(editable=False, max_length=3)),
                (
                    'container_code_label',
                    GeneratedField(
                        db_persist=True,
                        editable=False,
                        expression=Concat('container', Value('.'), 'label'),
                        # dot, row, column
                        output_field=CharField(max_length=CONTAINER_CODE_LENGTH + 1 + 1 + 2),
                        unique=True,
                    ),
                ),
            ],
        ),
        *constrain_models(),
        migrations.RunPython(create_untracked, migrations.RunPython.noop),
        migrations.CreateModel(
            name='Plan',
            fields=[
                (
                    'id',
                    BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('created_at', DateTimeField(auto_now_add=True)),
                (
                    'created_by',
                    ForeignKey(
                        on_delete=PROTECT, related_name='plans_created', to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                (
                    'id',
                    BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'plan',
                    ForeignKey(on_delete=PROTECT, related_name='transfers', to='wellplated.plan'),
                ),
                ('source', ForeignKey(on_delete=PROTECT, related_name='+', to='wellplated.well')),
                ('sink', ForeignKey(on_delete=PROTECT, related_name='+', to='wellplated.well')),
            ],
        ),
        migrations.AddField(
            model_name='well',
            name='sinks',
            field=ManyToManyField(
                related_name='sources', through='wellplated.Transfer', to='wellplated.well'
            ),
        ),
    )
